{"version":3,"sources":["books.js"],"names":["express","require","router","Router","Book","nodemailer","transporter","createTransport","service","auth","user","process","env","EMAIL","pass","PASSWORD","post","req","res","body","title","author","publishedYear","genre","availableCopies","email","newBook","save","mailOptions","from","to","subject","text","sendMail","error","info","console","log","response","status","json","message","get","find","books","findById","params","id","book","patch","updatedBook","remove","module","exports"],"mappings":"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","sourcesContent":["const express = require(\"express\");\r\nconst router = express.Router();\r\nconst Book = require(\"../models/Book\");\r\nconst nodemailer = require(\"nodemailer\");\r\n\r\n// Email configuration\r\nconst transporter = nodemailer.createTransport({\r\n  service: \"gmail\",\r\n  auth: {\r\n    user: process.env.EMAIL,\r\n    pass: process.env.PASSWORD,\r\n  },\r\n});\r\n\r\n// Add a new book\r\nrouter.post(\"/add\", async (req, res) => {\r\n  const { title, author, publishedYear, genre, availableCopies, email } =\r\n    req.body;\r\n  try {\r\n    const newBook = new Book({\r\n      title,\r\n      author,\r\n      publishedYear,\r\n      genre,\r\n      availableCopies,\r\n    });\r\n    await newBook.save();\r\n\r\n    // Send confirmation email\r\n    const mailOptions = {\r\n      from: process.env.EMAIL,\r\n      to: email,\r\n      subject: \"Book Added Successfully\",\r\n      text: `The book \"${title}\" has been added to the library.`,\r\n    };\r\n\r\n    transporter.sendMail(mailOptions, (error, info) => {\r\n      if (error) {\r\n        return console.log(error);\r\n      }\r\n      console.log(\"Email sent: \" + info.response);\r\n    });\r\n\r\n    res.status(201).json(newBook);\r\n  } catch (error) {\r\n    res.status(400).json({ message: error.message });\r\n  }\r\n});\r\n\r\n// View all books\r\nrouter.get(\"/\", async (req, res) => {\r\n  try {\r\n    const books = await Book.find();\r\n    res.json(books);\r\n  } catch (error) {\r\n    res.status(500).json({ message: error.message });\r\n  }\r\n});\r\n\r\n// View a single book by ID\r\nrouter.get(\"/:id\", async (req, res) => {\r\n  try {\r\n    const book = await Book.findById(req.params.id);\r\n    if (book == null) {\r\n      return res.status(404).json({ message: \"Book not found\" });\r\n    }\r\n    res.json(book);\r\n  } catch (error) {\r\n    res.status(500).json({ message: error.message });\r\n  }\r\n});\r\n\r\n// Update a book\r\nrouter.patch(\"/:id\", async (req, res) => {\r\n  try {\r\n    const book = await Book.findById(req.params.id);\r\n    if (book == null) {\r\n      return res.status(404).json({ message: \"Book not found\" });\r\n    }\r\n\r\n    if (req.body.title != null) {\r\n      book.title = req.body.title;\r\n    }\r\n    if (req.body.author != null) {\r\n      book.author = req.body.author;\r\n    }\r\n    if (req.body.publishedYear != null) {\r\n      book.publishedYear = req.body.publishedYear;\r\n    }\r\n    if (req.body.genre != null) {\r\n      book.genre = req.body.genre;\r\n    }\r\n    if (req.body.availableCopies != null) {\r\n      book.availableCopies = req.body.availableCopies;\r\n    }\r\n\r\n    const updatedBook = await book.save();\r\n    res.json(updatedBook);\r\n  } catch (error) {\r\n    res.status(400).json({ message: error.message });\r\n  }\r\n});\r\n\r\n// Delete a book\r\nrouter.delete(\"/:id\", async (req, res) => {\r\n  try {\r\n    const book = await Book.findById(req.params.id);\r\n    if (book == null) {\r\n      return res.status(404).json({ message: \"Book not found\" });\r\n    }\r\n\r\n    await book.remove();\r\n    res.json({ message: \"Book deleted\" });\r\n  } catch (error) {\r\n    res.status(500).json({ message: error.message });\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"],"file":"books.dev.js"}